TaskFailedException

    nested task error: BoundsError: attempt to access Tuple{Vector{Float64}, Vector{Any}, Symbolics.Num} at index [4]
    Stacktrace:
      [1] getindex
        @ ./tuple.jl:31 [inlined]
      [2] macro expansion
        @ ~/.julia/packages/RuntimeGeneratedFunctions/M9ZX8/src/RuntimeGeneratedFunctions.jl:162 [inlined]
      [3] macro expansion
        @ ./none:0 [inlined]
      [4] generated_callfunc
        @ ./none:0 [inlined]
      [5] (::RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr})(::Vector{Float64}, ::Vector{Any}, ::Symbolics.Num)
        @ RuntimeGeneratedFunctions ~/.julia/packages/RuntimeGeneratedFunctions/M9ZX8/src/RuntimeGeneratedFunctions.jl:150
      [6] (::Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}})(par::Vector{ForwardDiff.Dual{ForwardDiff.Tag{Neuroblox.var"#52#54"{Dict{Symbol, Vector{Int64}}, String, Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, Int64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Float64}, Float64, 11}})
        @ Neuroblox ~/.julia/packages/Neuroblox/YqgtU/src/datafitting/spDCM_VL.jl:414
      [7] transferfunction(freq::StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, derivatives::Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, params::Vector{ForwardDiff.Dual{ForwardDiff.Tag{Neuroblox.var"#52#54"{Dict{Symbol, Vector{Int64}}, String, Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, Int64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Float64}, Float64, 11}}, indices::Dict{Symbol, Vector{Int64}})
        @ Neuroblox ~/.julia/packages/Neuroblox/YqgtU/src/datafitting/spDCM_VL.jl:110
      [8] csd_approx(freq::StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, derivatives::Function, params::Vector{ForwardDiff.Dual{ForwardDiff.Tag{Neuroblox.var"#52#54"{Dict{Symbol, Vector{Int64}}, String, Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, Int64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Float64}, Float64, 11}}, indices::Dict{Symbol, Vector{Int64}})
        @ Neuroblox ~/.julia/packages/Neuroblox/YqgtU/src/datafitting/spDCM_VL.jl:181
      [9] csd_mtf(freq::StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, p::Int64, derivatives::Function, params::Vector{ForwardDiff.Dual{ForwardDiff.Tag{Neuroblox.var"#52#54"{Dict{Symbol, Vector{Int64}}, String, Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, Int64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Float64}, Float64, 11}}, params_idx::Dict{Symbol, Vector{Int64}}, modality::String)
        @ Neuroblox ~/.julia/packages/Neuroblox/YqgtU/src/datafitting/spDCM_VL.jl:232
     [10] #52
        @ ~/.julia/packages/Neuroblox/YqgtU/src/datafitting/spDCM_VL.jl:429 [inlined]
     [11] vector_mode_dual_eval!
        @ ~/.julia/packages/ForwardDiff/UBbGT/src/apiutils.jl:24 [inlined]
     [12] vector_mode_jacobian(f::Neuroblox.var"#52#54"{Dict{Symbol, Vector{Int64}}, String, Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, Int64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, x::Vector{Float64}, cfg::ForwardDiff.JacobianConfig{ForwardDiff.Tag{Neuroblox.var"#52#54"{Dict{Symbol, Vector{Int64}}, String, Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, Int64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Float64}, Float64, 11, Vector{ForwardDiff.Dual{ForwardDiff.Tag{Neuroblox.var"#52#54"{Dict{Symbol, Vector{Int64}}, String, Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, Int64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Float64}, Float64, 11}}})
        @ ForwardDiff ~/.julia/packages/ForwardDiff/UBbGT/src/jacobian.jl:129
     [13] jacobian
        @ ~/.julia/packages/ForwardDiff/UBbGT/src/jacobian.jl:22 [inlined]
     [14] jacobian(f::Neuroblox.var"#52#54"{Dict{Symbol, Vector{Int64}}, String, Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, Int64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, x::Vector{Float64}, cfg::ForwardDiff.JacobianConfig{ForwardDiff.Tag{Neuroblox.var"#52#54"{Dict{Symbol, Vector{Int64}}, String, Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, Int64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Float64}, Float64, 11, Vector{ForwardDiff.Dual{ForwardDiff.Tag{Neuroblox.var"#52#54"{Dict{Symbol, Vector{Int64}}, String, Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, Int64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Float64}, Float64, 11}}})
        @ ForwardDiff ~/.julia/packages/ForwardDiff/UBbGT/src/jacobian.jl:19
     [15] jacobian(f::Neuroblox.var"#52#54"{Dict{Symbol, Vector{Int64}}, String, Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, Int64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, x::Vector{Float64})
        @ ForwardDiff ~/.julia/packages/ForwardDiff/UBbGT/src/jacobian.jl:19
     [16] _run_sDCM_iteration!(state::Neuroblox.VLState, setup::Neuroblox.VLSetup{Neuroblox.var"#52#54"{Dict{Symbol, Vector{Int64}}, String, Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, Int64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Array{ComplexF64, 3}, Matrix{ComplexF64}})
        @ Neuroblox ~/.julia/packages/Neuroblox/YqgtU/src/datafitting/spDCM_VL.jl:481
     [17] (::Neuroblox.var"#55#56"{Neuroblox.VLState, Neuroblox.VLSetup{Neuroblox.var"#52#54"{Dict{Symbol, Vector{Int64}}, String, Neuroblox.var"#51#53"{ModelingToolkit.ODESystem, Vector{Float64}, RuntimeGeneratedFunctions.RuntimeGeneratedFunction{(:ˍ₋arg1, :ˍ₋arg2, :ˍ₋arg3, :t), Symbolics.var"#_RGF_ModTag", Symbolics.var"#_RGF_ModTag", (0x0ccb9cee, 0x524cf697, 0xeefc179e, 0xe0d08f4d, 0xe0d13df3), Expr}}, Int64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Array{ComplexF64, 3}, Matrix{ComplexF64}}})()
        @ Neuroblox ~/.julia/packages/Neuroblox/YqgtU/src/datafitting/spDCM_VL.jl:467
